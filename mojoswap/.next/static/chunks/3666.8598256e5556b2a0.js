"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3666],{70026:(t,e,r)=>{r.d(e,{S:()=>o});var a=r(27454),n=r(79195),s=r(10805);class o{get chainId(){return this._chainId}constructor(t,e,r){this.contractWrapper=t,this.storage=e,this.erc721=new s.E(this.contractWrapper,this.storage,r),this._chainId=r}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getAll(t){return this.erc721.getAll(t)}async getOwned(t,e){return t&&(t=await (0,a.aL)(t)),this.erc721.getOwned(t,e)}async getOwnedTokenIds(t){return t&&(t=await (0,a.aL)(t)),this.erc721.getOwnedTokenIds(t)}async totalSupply(){return this.erc721.totalCirculatingSupply()}async get(t){return this.erc721.get(t)}async ownerOf(t){return this.erc721.ownerOf(t)}async balanceOf(t){return this.erc721.balanceOf(t)}async balance(){return this.erc721.balance()}async isApproved(t,e){return this.erc721.isApproved(t,e)}transfer=(0,n.f)(async(t,e)=>this.erc721.transfer.prepare(t,e));setApprovalForAll=(0,n.f)(async(t,e)=>this.erc721.setApprovalForAll.prepare(t,e));setApprovalForToken=(0,n.f)(async(t,e)=>n.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"approve",args:[await (0,a.aL)(t),e]}))}},79271:(t,e,r)=>{r.d(e,{h:()=>n});var a=r(27454);async function n(t,e,n){let s=t.getProvider(),o=(await Promise.resolve().then(r.t.bind(r,96337,19))).default,i=new a.cs(s,e,o,{},t.storage),c=await t.getSignerAddress(),d=t.address;return(await i.read("allowance",[c,d])).gte(n)}},41862:(t,e,r)=>{r.d(e,{a:()=>h,g:()=>w,h:()=>p,i:()=>d,m:()=>u,v:()=>l});var a=r(86863),n=r(37457),s=r(11561),o=r(7471),i=r(27454),c=r(95848);async function d(t,e,n,s,i){try{let c=(await r.e(4811).then(r.t.bind(r,94811,19))).default,d=new a.NZ(n,c,t),[p,l]=await Promise.all([d.supportsInterface(o.I),d.supportsInterface(o.a)]);if(p){let o;let c=(await Promise.resolve().then(r.t.bind(r,57305,19))).default,d=new a.NZ(n,c,t);if(await d.isApprovedForAll(i,e))return!0;try{o=await d.getApproved(s)}catch(t){}return o?.toLowerCase()===e.toLowerCase()}if(!l)return console.error("Contract does not implement ERC 1155 or ERC 721."),!1;{let s=(await Promise.resolve().then(r.t.bind(r,59355,19))).default,o=new a.NZ(n,s,t);return await o.isApprovedForAll(i,e)}}catch(t){return console.error("Failed to check if token is approved",t),!1}}async function p(t,e,a,n,s){let c=(await r.e(4811).then(r.t.bind(r,94811,19))).default,d=new i.cs(t.getSignerOrProvider(),a,c,t.options,t.storage),[p,l]=await Promise.all([d.read("supportsInterface",[o.I]),d.read("supportsInterface",[o.a])]);if(p){let o=(await Promise.resolve().then(r.t.bind(r,57305,19))).default,c=new i.cs(t.getSignerOrProvider(),a,o,t.options,t.storage);await c.read("isApprovedForAll",[s,e])||(await c.read("getApproved",[n])).toLowerCase()===e.toLowerCase()||await c.sendTransaction("setApprovalForAll",[e,!0])}else if(l){let n=(await Promise.resolve().then(r.t.bind(r,59355,19))).default,o=new i.cs(t.getSignerOrProvider(),a,n,t.options,t.storage);await o.read("isApprovedForAll",[s,e])||await o.sendTransaction("setApprovalForAll",[e,!0])}else throw Error("Contract must implement ERC 1155 or ERC 721.")}function l(t){(0,s.A)(void 0!==t.assetContractAddress&&null!==t.assetContractAddress,"Asset contract address is required"),(0,s.A)(void 0!==t.buyoutPricePerToken&&null!==t.buyoutPricePerToken,"Buyout price is required"),(0,s.A)(void 0!==t.listingDurationInSeconds&&null!==t.listingDurationInSeconds,"Listing duration is required"),(0,s.A)(void 0!==t.startTimestamp&&null!==t.startTimestamp,"Start time is required"),(0,s.A)(void 0!==t.tokenId&&null!==t.tokenId,"Token ID is required"),(0,s.A)(void 0!==t.quantity&&null!==t.quantity,"Quantity is required"),"NewAuctionListing"===t.type&&(0,s.A)(void 0!==t.reservePricePerToken&&null!==t.reservePricePerToken,"Reserve price is required")}async function u(t,e,r){return{quantity:r.quantityDesired,pricePerToken:r.pricePerToken,currencyContractAddress:r.currency,buyerAddress:r.offeror,quantityDesired:r.quantityWanted,currencyValue:await (0,c.a)(t,r.currency,r.quantityWanted.mul(r.pricePerToken)),listingId:e}}function h(t,e,r){return r=n.gH.from(r),t=n.gH.from(t),e=n.gH.from(e),!t.eq(n.gH.from(0))&&e.sub(t).mul(i.dE).div(t).gte(r)}async function w(t,e,r){let a=[];for(;e-t>o.D;)a.push(r(t,t+o.D-1)),t+=o.D;return a.push(r(t,e-1)),await Promise.all(a)}},33666:(t,e,r)=>{r.r(e),r.d(e,{Multiwrap:()=>g});var a=r(65579),n=r(95848),s=r(79271),o=r(29966),i=r(27454),c=r(41862),d=r(7471),p=r(79195),l=r(12204),u=r(66048),h=r(20522),w=r(70026);r(3802),r(16763),r(74486),r(32017);class g extends w.S{static contractRoles=i.dI;constructor(t,e,r){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},s=arguments.length>4?arguments[4]:void 0,o=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new i.cs(t,e,s,a,r);super(c,r,o),this.abi=i.bj.parse(s||[]),this.metadata=new l.C(this.contractWrapper,i.dJ,this.storage),this.app=new l.b(this.contractWrapper,this.metadata,this.storage),this.roles=new h.C(this.contractWrapper,g.contractRoles),this.encoder=new n.C(this.contractWrapper),this.estimator=new l.G(this.contractWrapper),this.events=new l.a(this.contractWrapper),this.royalties=new u.C(this.contractWrapper,this.metadata),this.owner=new u.a(this.contractWrapper)}async getWrappedContents(t){let e=await this.contractWrapper.read("getWrappedContents",[t]),r=[],s=[],o=[];for(let t of e)switch(t.tokenType){case 0:{let e=await (0,n.f)(this.contractWrapper.getProvider(),t.assetContract);r.push({contractAddress:t.assetContract,quantity:a.formatUnits(t.totalAmount,e.decimals)});break}case 1:s.push({contractAddress:t.assetContract,tokenId:t.tokenId});break;case 2:o.push({contractAddress:t.assetContract,tokenId:t.tokenId,quantity:t.totalAmount.toString()})}return{erc20Tokens:r,erc721Tokens:s,erc1155Tokens:o}}wrap=(0,p.f)(async(t,e,r)=>{let[a,n,s]=await Promise.all([(0,d.b)(e,this.storage),this.toTokenStructList(t),(0,i.aL)(r||await this.contractWrapper.getSignerAddress())]);return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"wrap",args:[n,a,s],parse:t=>{let e=this.contractWrapper.parseLogs("TokensWrapped",t?.logs);if(0===e.length)throw Error("TokensWrapped event not found");let r=e[0].args.tokenIdOfWrappedToken;return{id:r,receipt:t,data:()=>this.get(r)}}})});unwrap=(0,p.f)(async(t,e)=>{let r=await (0,i.aL)(e||await this.contractWrapper.getSignerAddress());return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"unwrap",args:[t,r]})});async toTokenStructList(t){let e=[],r=this.contractWrapper.getProvider(),a=await this.contractWrapper.getSignerAddress();if(t.erc20Tokens)for(let a of t.erc20Tokens){let t=await (0,o.n)(r,a.quantity,a.contractAddress);if(!await (0,s.h)(this.contractWrapper,a.contractAddress,t))throw Error(`ERC20 token with contract address "${a.contractAddress}" does not have enough allowance to transfer.

You can set allowance to the multiwrap contract to transfer these tokens by running:

await sdk.getToken("${a.contractAddress}").setAllowance("${this.getAddress()}", ${a.quantity});

`);e.push({assetContract:a.contractAddress,totalAmount:t,tokenId:0,tokenType:0})}if(t.erc721Tokens)for(let r of t.erc721Tokens){if(!await (0,c.i)(this.contractWrapper.getProvider(),this.getAddress(),r.contractAddress,r.tokenId,a))throw Error(`ERC721 token "${r.tokenId}" with contract address "${r.contractAddress}" is not approved for transfer.

You can give approval the multiwrap contract to transfer this token by running:

await sdk.getNFTCollection("${r.contractAddress}").setApprovalForToken("${this.getAddress()}", ${r.tokenId});

`);e.push({assetContract:r.contractAddress,totalAmount:0,tokenId:r.tokenId,tokenType:1})}if(t.erc1155Tokens)for(let r of t.erc1155Tokens){if(!await (0,c.i)(this.contractWrapper.getProvider(),this.getAddress(),r.contractAddress,r.tokenId,a))throw Error(`ERC1155 token "${r.tokenId}" with contract address "${r.contractAddress}" is not approved for transfer.

You can give approval the multiwrap contract to transfer this token by running:

await sdk.getEdition("${r.contractAddress}").setApprovalForAll("${this.getAddress()}", true);

`);e.push({assetContract:r.contractAddress,totalAmount:r.quantity,tokenId:r.tokenId,tokenType:2})}return e}async prepare(t,e,r){return p.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:e,overrides:r})}async call(t,e,r){return this.contractWrapper.call(t,e,r)}}}}]);