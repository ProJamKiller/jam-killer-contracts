"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6447],{7471:(t,e,r)=>{r.d(e,{D:()=>m,F:()=>l,I:()=>c,a:()=>d,b:()=>g,c:()=>u,f:()=>p,g:()=>f,u:()=>h});var a=r(17152),i=r(8471),n=r(37457),s=r(86863),o=r(48287).Buffer;let c=i.arrayify("0x80ac58cd"),d=i.arrayify("0xd9b67a26"),l={name:"Failed to load NFT metadata"};async function p(t,e,r){let s;if(e.startsWith("data:application/json;base64")&&void 0!==o){let r=e.split(",")[1],i=JSON.parse(o.from(r,"base64").toString("utf-8"));return a.a.parse({...i,id:n.gH.from(t).toString(),uri:e})}let c=e.replace("{id}",i.hexZeroPad(n.gH.from(t).toHexString(),32).slice(2));try{s=await r.downloadJSON(c)}catch(i){let a=e.replace("{id}",n.gH.from(t).toString());try{s=await r.downloadJSON(a)}catch(r){console.warn(`failed to get token metadata: ${JSON.stringify({tokenId:t.toString(),tokenUri:e})} -- falling back to default metadata`),s=l}}return a.a.parse({...s,id:n.gH.from(t).toString(),uri:e})}async function u(t,e,i,o){let u;let g=(await r.e(4811).then(r.t.bind(r,94811,19))).default,h=new s.NZ(t,g,e),[f,m]=await Promise.all([h.supportsInterface(c),h.supportsInterface(d)]);if(f){let a=(await Promise.resolve().then(r.t.bind(r,1024,19))).default,n=new s.NZ(t,a,e);u=await n.tokenURI(i)}else if(m){let a=(await Promise.resolve().then(r.t.bind(r,51146,19))).default,n=new s.NZ(t,a,e);u=await n.uri(i)}else throw Error("Contract must implement ERC 1155 or ERC 721.");return u?p(i,u,o):a.a.parse({...l,id:n.gH.from(i).toString(),uri:""})}async function g(t,e){return"string"==typeof t?t:await e.upload(a.C.parse(t))}async function h(t,e,r,i){if(void 0===t.find(t=>"string"!=typeof t))return t;if(void 0===t.find(t=>"object"!=typeof t))return await e.uploadBatch(t.map(t=>a.C.parse(t)),{rewriteFileNames:{fileStartNumber:r||0},onProgress:i?.onProgress});throw Error("NFT metadatas must all be of the same type (all URI or all NFTMetadataInput)")}function f(t){let e=t[0].substring(0,t[0].lastIndexOf("/"));for(let r=0;r<t.length;r++){let a=t[r].substring(0,t[r].lastIndexOf("/"));if(e!==a)throw Error(`Can only create batches with the same base URI for every entry in the batch. Expected '${e}' but got '${a}'`)}return e.replace(/\/$/,"")+"/"}let m=100},41104:(t,e,r)=>{r.d(e,{c:()=>n});var a=r(27454),i=r(95848);function n(t){return(0,i.i)(t)?a.aV:t}},34590:(t,e,r)=>{r.d(e,{C:()=>a});class a{constructor(t){this.contractWrapper=t}overrideNextTransaction(t){this.contractWrapper.withTransactionOverride(t)}}},97205:(t,e,r)=>{r.d(e,{C:()=>n});var a=r(79195),i=r(27454);class n{featureName=i.du.name;constructor(t){this.contractWrapper=t}async get(){let[t,e]=await this.contractWrapper.read("getPlatformFeeInfo",[]);return i.bH.parseAsync({platform_fee_recipient:t,platform_fee_basis_points:e})}set=(0,a.f)(async t=>{let e=await i.bH.parseAsync(t);return a.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPlatformFeeInfo",args:[e.platform_fee_recipient,e.platform_fee_basis_points]})})}},56447:(t,e,r)=>{r.r(e),r.d(e,{Marketplace:()=>P});var a=r(37457),i=r(48892),n=r(65579),s=r(43514),o=r(8402),c=r(86863),d=r(11561),l=r(7471),p=r(95848),u=r(27454),g=r(41862),h=r(79195),f=r(12204),m=r(34590),w=r(97205),y=r(20522),W=r(41104),A=r(29966),v=r(17152);let L=function(t){return t[t.Direct=0]="Direct",t[t.Auction=1]="Auction",t}({});r(3802),r(16763),r(74486);class C{constructor(t,e){this.contractWrapper=t,this.storage=e,this.encoder=new p.C(t)}getAddress(){return this.contractWrapper.address}async getListing(t){let e=await this.contractWrapper.read("listings",[t]);if(e.listingId.toString()!==t.toString())throw new u.L(this.getAddress(),t.toString());if(e.listingType!==L.Auction)throw new u.W(this.getAddress(),t.toString(),"Direct","Auction");return await this.mapListing(e)}async getWinningBid(t){await this.validateListing(a.gH.from(t));let e=await this.contractWrapper.read("winningBid",[t]);if(e.offeror!==i.L)return await (0,g.m)(this.contractWrapper.getProvider(),a.gH.from(t),e)}async getWinner(t){let e=await this.validateListing(a.gH.from(t)),r=await this.contractWrapper.read("winningBid",[t]),n=a.gH.from(Math.floor(Date.now()/1e3)),s=a.gH.from(e.endTimeInEpochSeconds);if(n.gt(s)&&r.offeror!==i.L)return r.offeror;let o=new f.a(this.contractWrapper),c=(await o.getEvents("AuctionClosed")).find(e=>e.data.listingId.eq(a.gH.from(t)));if(!c)throw Error(`Could not find auction with listingId ${t} in closed auctions`);return c.data.winningBidder}createListing=(0,h.f)(async t=>{(0,g.v)(t);let e=await (0,u.aL)(t.assetContractAddress),r=await (0,u.aL)(t.currencyContractAddress);await (0,g.h)(this.contractWrapper,this.getAddress(),e,t.tokenId,await this.contractWrapper.getSignerAddress());let i=await (0,A.n)(this.contractWrapper.getProvider(),t.buyoutPricePerToken,r),n=await (0,A.n)(this.contractWrapper.getProvider(),t.reservePricePerToken,r),s=Math.floor(t.startTimestamp.getTime()/1e3),o=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;s<o&&(s=o);let c=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:e,tokenId:t.tokenId,buyoutPricePerToken:i,currencyToAccept:(0,W.c)(r),listingType:L.Auction,quantityToList:t.quantity,reservePricePerToken:n,secondsUntilEndTime:t.listingDurationInSeconds,startTime:a.gH.from(s)}],parse:t=>({id:this.contractWrapper.parseLogs("ListingAdded",t?.logs)[0].args.listingId,receipt:t})});return c.setGasLimitMultiple(1.2),c});createListingsBatch=(0,h.f)(async t=>{let e=(await Promise.all(t.map(t=>this.createListing.prepare(t)))).map(t=>t.encode()),r=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[e],parse:t=>this.contractWrapper.parseLogs("ListingAdded",t?.logs).map(e=>({id:e.args.listingId,receipt:t}))});return r.setGasLimitMultiple(1.2),r});buyoutListing=(0,h.f)(async t=>{let e=await this.validateListing(a.gH.from(t)),r=await (0,p.f)(this.contractWrapper.getProvider(),e.currencyContractAddress);return this.makeBid.prepare(t,n.formatUnits(e.buyoutPrice,r.decimals))});makeBid=(0,h.f)(async(t,e)=>{let r=await this.validateListing(a.gH.from(t)),i=await (0,A.n)(this.contractWrapper.getProvider(),e,r.currencyContractAddress);if(i.eq(a.gH.from(0)))throw Error("Cannot make a bid with 0 value");let n=await this.contractWrapper.read("bidBufferBps",[]),o=await this.getWinningBid(t);if(o){let t=(0,g.a)(o.pricePerToken,i,n);(0,d.A)(t,"Bid price is too low based on the current winning bid and the bid buffer")}else{let t=a.gH.from(r.reservePrice);(0,d.A)(i.gte(t),"Bid price is too low based on reserve price")}let c=a.gH.from(r.quantity),l=i.mul(c),p=await this.contractWrapper.getCallOverrides()||{};await (0,v.s)(this.contractWrapper,l,r.currencyContractAddress,p);let u=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[t,r.quantity,r.currencyContractAddress,i,s.Is],overrides:p});return u.setGasLimitMultiple(1.2),u});cancelListing=(0,h.f)(async t=>{let e=await this.validateListing(a.gH.from(t)),r=a.gH.from(Math.floor(Date.now()/1e3)),n=a.gH.from(e.startTimeInEpochSeconds),s=await this.contractWrapper.read("winningBid",[t]);if(r.gt(n)&&s.offeror!==i.L)throw new u.t(t.toString());let o=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[a.gH.from(t),await this.contractWrapper.getSignerAddress()]});return o.setGasLimitMultiple(1.2),o});closeListing=(0,h.f)(async(t,e)=>{e||(e=await this.contractWrapper.getSignerAddress());let r=await this.validateListing(a.gH.from(t));try{let r=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"closeAuction",args:[a.gH.from(t),e]});return r.setGasLimitMultiple(1.2),r}catch(e){if(e.message.includes("cannot close auction before it has ended"))throw new u.w(t.toString(),r.endTimeInEpochSeconds.toString());throw e}});executeSale=(0,h.f)(async t=>{let e=await this.validateListing(a.gH.from(t));try{let r=await this.getWinningBid(t);(0,d.A)(r,"No winning bid found");let a=this.encoder.encode("closeAuction",[t,e.sellerAddress]),i=this.encoder.encode("closeAuction",[t,r.buyerAddress]),n=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[a,i]});return n.setGasLimitMultiple(1.2),n}catch(r){if(r.message.includes("cannot close auction before it has ended"))throw new u.w(t.toString(),e.endTimeInEpochSeconds.toString());throw r}});updateListing=(0,h.f)(async t=>{let e=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[t.id,t.quantity,t.reservePrice,t.buyoutPrice,t.currencyContractAddress,t.startTimeInEpochSeconds,t.endTimeInEpochSeconds]});return e.setGasLimitMultiple(1.2),e});async getBidBufferBps(){return this.contractWrapper.read("bidBufferBps",[])}async getMinimumNextBid(t){let[e,r,i]=await Promise.all([this.getBidBufferBps(),this.getWinningBid(t),this.validateListing(a.gH.from(t))]),n=r?r.currencyValue.value:i.reservePrice,s=n.add(n.mul(e).div(1e4));return(0,p.a)(this.contractWrapper.getProvider(),i.currencyContractAddress,s)}async validateListing(t){try{return await this.getListing(t)}catch(e){throw console.error(`Error getting the listing with id ${t}`),e}}async mapListing(t){return{assetContractAddress:t.assetContract,buyoutPrice:a.gH.from(t.buyoutPricePerToken),currencyContractAddress:t.currency,buyoutCurrencyValuePerToken:await (0,p.a)(this.contractWrapper.getProvider(),t.currency,t.buyoutPricePerToken),id:t.listingId.toString(),tokenId:t.tokenId,quantity:t.quantity,startTimeInEpochSeconds:t.startTime,asset:await (0,l.c)(t.assetContract,this.contractWrapper.getProvider(),t.tokenId,this.storage),reservePriceCurrencyValuePerToken:await (0,p.a)(this.contractWrapper.getProvider(),t.currency,t.reservePricePerToken),reservePrice:a.gH.from(t.reservePricePerToken),endTimeInEpochSeconds:t.endTime,sellerAddress:t.tokenOwner,type:L.Auction}}}class T{constructor(t,e){this.contractWrapper=t,this.storage=e}getAddress(){return this.contractWrapper.address}async getListing(t){let e=await this.contractWrapper.read("listings",[t]);if(e.assetContract===i.L)throw new u.L(this.getAddress(),t.toString());if(e.listingType!==L.Direct)throw new u.W(this.getAddress(),t.toString(),"Auction","Direct");return await this.mapListing(e)}async getActiveOffer(t,e){await this.validateListing(a.gH.from(t)),(0,d.A)(o.isAddress(e),"Address must be a valid address");let r=await this.contractWrapper.read("offers",[t,await (0,u.aL)(e)]);if(r.offeror!==i.L)return await (0,g.m)(this.contractWrapper.getProvider(),a.gH.from(t),r)}createListing=(0,h.f)(async t=>{(0,g.v)(t);let e=await (0,u.aL)(t.assetContractAddress),r=await (0,u.aL)(t.currencyContractAddress);await (0,g.h)(this.contractWrapper,this.getAddress(),e,t.tokenId,await this.contractWrapper.getSignerAddress());let i=await (0,A.n)(this.contractWrapper.getProvider(),t.buyoutPricePerToken,r),n=Math.floor(t.startTimestamp.getTime()/1e3),s=(await this.contractWrapper.getProvider().getBlock("latest")).timestamp;n<s&&(n=s);let o=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createListing",args:[{assetContract:e,tokenId:t.tokenId,buyoutPricePerToken:i,currencyToAccept:(0,W.c)(r),listingType:L.Direct,quantityToList:t.quantity,reservePricePerToken:i,secondsUntilEndTime:t.listingDurationInSeconds,startTime:a.gH.from(n)}],parse:t=>({id:this.contractWrapper.parseLogs("ListingAdded",t?.logs)[0].args.listingId,receipt:t})});return o.setGasLimitMultiple(1.2),o});createListingsBatch=(0,h.f)(async t=>{let e=(await Promise.all(t.map(t=>this.createListing.prepare(t)))).map(t=>t.encode()),r=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[e],parse:t=>this.contractWrapper.parseLogs("ListingAdded",t?.logs).map(e=>({id:e.args.listingId,receipt:t}))});return r.setGasLimitMultiple(1.2),r});makeOffer=(0,h.f)(async(t,e,r,i,n)=>{if((0,p.i)(r))throw Error("You must use the wrapped native token address when making an offer with a native token");let o=await (0,A.n)(this.contractWrapper.getProvider(),i,r);try{await this.getListing(t)}catch(e){throw console.error("Failed to get listing, err =",e),Error(`Error getting the listing with id ${t}`)}let c=a.gH.from(e),d=a.gH.from(o).mul(c),l=await this.contractWrapper.getCallOverrides()||{};await (0,v.s)(this.contractWrapper,d,r,l);let u=s.Is;n&&(u=a.gH.from(Math.floor(n.getTime()/1e3)));let g=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"offer",args:[t,e,r,o,u],overrides:l});return g.setGasLimitMultiple(1.2),g});acceptOffer=(0,h.f)(async(t,e)=>{await this.validateListing(a.gH.from(t));let r=await (0,u.aL)(e),i=await this.contractWrapper.read("offers",[t,r]),n=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"acceptOffer",args:[t,r,i.currency,i.pricePerToken]});return n.setGasLimitMultiple(1.2),n});buyoutListing=(0,h.f)(async(t,e,r)=>{let i=await this.validateListing(a.gH.from(t)),{valid:n,error:s}=await this.isStillValidListing(i,e);if(!n)throw Error(`Listing ${t} is no longer valid. ${s}`);let o=r||await this.contractWrapper.getSignerAddress(),c=a.gH.from(e),d=a.gH.from(i.buyoutPrice).mul(c),l=await this.contractWrapper.getCallOverrides()||{};await (0,v.s)(this.contractWrapper,d,i.currencyContractAddress,l);let p=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"buy",args:[t,o,c,i.currencyContractAddress,d],overrides:l});return p.setGasLimitMultiple(1.2),p});updateListing=(0,h.f)(async t=>{let e=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"updateListing",args:[t.id,t.quantity,t.buyoutPrice,t.buyoutPrice,await (0,u.aL)(t.currencyContractAddress),t.startTimeInSeconds,t.secondsUntilEnd]});return e.setGasLimitMultiple(1.2),e});cancelListing=(0,h.f)(async t=>{let e=h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"cancelDirectListing",args:[t]});return e.setGasLimitMultiple(1.2),e});async validateListing(t){try{return await this.getListing(t)}catch(e){throw console.error(`Error getting the listing with id ${t}`),e}}async mapListing(t){return{assetContractAddress:t.assetContract,buyoutPrice:a.gH.from(t.buyoutPricePerToken),currencyContractAddress:t.currency,buyoutCurrencyValuePerToken:await (0,p.a)(this.contractWrapper.getProvider(),t.currency,t.buyoutPricePerToken),id:t.listingId.toString(),tokenId:t.tokenId,quantity:t.quantity,startTimeInSeconds:t.startTime,asset:await (0,l.c)(t.assetContract,this.contractWrapper.getProvider(),t.tokenId,this.storage),secondsUntilEnd:t.endTime,sellerAddress:t.tokenOwner,type:L.Direct}}async isStillValidListing(t,e){if(!await (0,g.i)(this.contractWrapper.getProvider(),this.getAddress(),t.assetContractAddress,t.tokenId,t.sellerAddress))return{valid:!1,error:`Token '${t.tokenId}' from contract '${t.assetContractAddress}' is not approved for transfer`};let a=this.contractWrapper.getProvider(),i=(await r.e(4811).then(r.t.bind(r,94811,19))).default,n=new c.NZ(t.assetContractAddress,i,a),s=await n.supportsInterface(l.I),o=await n.supportsInterface(l.a);if(s){let e;let i=(await Promise.resolve().then(r.t.bind(r,57305,19))).default,n=new c.NZ(t.assetContractAddress,i,a);try{e=await n.ownerOf(t.tokenId)}catch(t){}let s=e?.toLowerCase()===t.sellerAddress.toLowerCase();return{valid:s,error:s?void 0:`Seller is not the owner of Token '${t.tokenId}' from contract '${t.assetContractAddress} anymore'`}}if(!o)return{valid:!1,error:"Contract does not implement ERC 1155 or ERC 721."};{let i=(await Promise.resolve().then(r.t.bind(r,59355,19))).default,n=new c.NZ(t.assetContractAddress,i,a),s=(await n.balanceOf(t.sellerAddress,t.tokenId)).gte(e||t.quantity);return{valid:s,error:s?void 0:`Seller does not have enough balance of Token '${t.tokenId}' from contract '${t.assetContractAddress} to fulfill the listing`}}}}class P{static contractRoles=u.dH;get chainId(){return this._chainId}constructor(t,e,r){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},i=arguments.length>4?arguments[4]:void 0,n=arguments.length>5?arguments[5]:void 0,s=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new u.cs(t,e,i,a,r);this._chainId=n,this.abi=u.bj.parse(i||[]),this.contractWrapper=s,this.storage=r,this.metadata=new f.C(this.contractWrapper,u.b$,this.storage),this.app=new f.b(this.contractWrapper,this.metadata,this.storage),this.roles=new y.C(this.contractWrapper,P.contractRoles),this.encoder=new p.C(this.contractWrapper),this.estimator=new f.G(this.contractWrapper),this.direct=new T(this.contractWrapper,this.storage),this.auction=new C(this.contractWrapper,this.storage),this.events=new f.a(this.contractWrapper),this.platformFees=new w.C(this.contractWrapper),this.interceptor=new m.C(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async getListing(t){let e=await this.contractWrapper.read("listings",[t]);if(e.assetContract===i.L)throw new u.L(this.getAddress(),t.toString());switch(e.listingType){case L.Auction:return await this.auction.mapListing(e);case L.Direct:return await this.direct.mapListing(e);default:throw Error(`Unknown listing type: ${e.listingType}`)}}async getActiveListings(t){let e=await this.getAllListingsNoFilter(!0),r=this.applyFilter(e,t),i=a.gH.from(Math.floor(Date.now()/1e3));return r.filter(t=>t.type===L.Auction&&a.gH.from(t.endTimeInEpochSeconds).gt(i)&&a.gH.from(t.startTimeInEpochSeconds).lte(i)||t.type===L.Direct&&a.gH.from(t.quantity).gt(0))}async getAllListings(t){let e=await this.getAllListingsNoFilter(!1);return this.applyFilter(e,t)}getAll=this.getAllListings;async getTotalCount(){return await this.contractWrapper.read("totalListings",[])}async isRestrictedToListerRoleOnly(){return!await this.contractWrapper.read("hasRole",[(0,u.H)("lister"),i.L])}async getBidBufferBps(){return this.contractWrapper.read("bidBufferBps",[])}async getTimeBufferInSeconds(){return this.contractWrapper.read("timeBuffer",[])}async getOffers(t){let e=await this.events.getEvents("NewOffer",{order:"desc",filters:{listingId:t}});return await Promise.all(e.map(e=>(0,g.m)(this.contractWrapper.getProvider(),a.gH.from(t),{quantityWanted:e.data.quantityWanted,pricePerToken:e.data.quantityWanted.gt(0)?e.data.totalOfferAmount.div(e.data.quantityWanted):e.data.totalOfferAmount,currency:e.data.currency,offeror:e.data.offeror})))}buyoutListing=(0,h.f)(async(t,e,r)=>{let a=await this.contractWrapper.read("listings",[t]);if(a.listingId.toString()!==t.toString())throw new u.L(this.getAddress(),t.toString());switch(a.listingType){case L.Direct:return(0,d.A)(void 0!==e,"quantityDesired is required when buying out a direct listing"),await this.direct.buyoutListing.prepare(t,e,r);case L.Auction:return await this.auction.buyoutListing.prepare(t);default:throw Error(`Unknown listing type: ${a.listingType}`)}});makeOffer=(0,h.f)(async(t,e,r)=>{let a=await this.contractWrapper.read("listings",[t]);if(a.listingId.toString()!==t.toString())throw new u.L(this.getAddress(),t.toString());let i=await this.contractWrapper.getChainID();switch(a.listingType){case L.Direct:return(0,d.A)(r,"quantity is required when making an offer on a direct listing"),await this.direct.makeOffer.prepare(t,r,(0,p.i)(a.currency)?u.aW[i].wrapped.address:a.currency,e);case L.Auction:return await this.auction.makeBid.prepare(t,e);default:throw Error(`Unknown listing type: ${a.listingType}`)}});setBidBufferBps=(0,h.f)(async t=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());let e=await this.getTimeBufferInSeconds();return h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[e,a.gH.from(t)]})});setTimeBufferInSeconds=(0,h.f)(async t=>{await this.roles.verify(["admin"],await this.contractWrapper.getSignerAddress());let e=await this.getBidBufferBps();return h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setAuctionBuffers",args:[a.gH.from(t),e]})});allowListingFromSpecificAssetOnly=(0,h.f)(async t=>{let e=[];return(await this.roles.get("asset")).includes(i.L)&&e.push(this.encoder.encode("revokeRole",[(0,u.H)("asset"),i.L])),e.push(this.encoder.encode("grantRole",[(0,u.H)("asset"),t])),h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[e]})});allowListingFromAnyAsset=(0,h.f)(async()=>{let t=[],e=await this.roles.get("asset");for(let r in e)t.push(this.encoder.encode("revokeRole",[(0,u.H)("asset"),r]));return t.push(this.encoder.encode("grantRole",[(0,u.H)("asset"),i.L])),h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[t]})});async getAllListingsNoFilter(t){return(await Promise.all(Array.from(Array((await this.contractWrapper.read("totalListings",[])).toNumber()).keys()).map(async e=>{let r;try{r=await this.getListing(e)}catch(t){if(t instanceof u.L)return;console.warn(`Failed to get listing ${e}' - skipping. Try 'marketplace.getListing(${e})' to get the underlying error.`);return}if(r.type===L.Auction)return r;if(t){let{valid:t}=await this.direct.isStillValidListing(r);if(!t)return}return r}))).filter(t=>void 0!==t)}applyFilter(t,e){let r=[...t],i=a.gH.from(e?.start||0).toNumber(),n=a.gH.from(e?.count||l.D).toNumber();return e&&(e.seller&&(r=r.filter(t=>t.sellerAddress.toString().toLowerCase()===e?.seller?.toString().toLowerCase())),e.tokenContract&&(r=r.filter(t=>t.assetContractAddress.toString().toLowerCase()===e?.tokenContract?.toString().toLowerCase())),void 0!==e.tokenId&&(r=r.filter(t=>t.tokenId.toString()===e?.tokenId?.toString())),r=(r=r.filter((t,e)=>e>=i)).slice(0,n)),r}async prepare(t,e,r){return h.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:e,overrides:r})}async call(t,e,r){return this.contractWrapper.call(t,e,r)}}},41862:(t,e,r)=>{r.d(e,{a:()=>g,g:()=>h,h:()=>l,i:()=>d,m:()=>u,v:()=>p});var a=r(86863),i=r(37457),n=r(11561),s=r(7471),o=r(27454),c=r(95848);async function d(t,e,i,n,o){try{let c=(await r.e(4811).then(r.t.bind(r,94811,19))).default,d=new a.NZ(i,c,t),[l,p]=await Promise.all([d.supportsInterface(s.I),d.supportsInterface(s.a)]);if(l){let s;let c=(await Promise.resolve().then(r.t.bind(r,57305,19))).default,d=new a.NZ(i,c,t);if(await d.isApprovedForAll(o,e))return!0;try{s=await d.getApproved(n)}catch(t){}return s?.toLowerCase()===e.toLowerCase()}if(!p)return console.error("Contract does not implement ERC 1155 or ERC 721."),!1;{let n=(await Promise.resolve().then(r.t.bind(r,59355,19))).default,s=new a.NZ(i,n,t);return await s.isApprovedForAll(o,e)}}catch(t){return console.error("Failed to check if token is approved",t),!1}}async function l(t,e,a,i,n){let c=(await r.e(4811).then(r.t.bind(r,94811,19))).default,d=new o.cs(t.getSignerOrProvider(),a,c,t.options,t.storage),[l,p]=await Promise.all([d.read("supportsInterface",[s.I]),d.read("supportsInterface",[s.a])]);if(l){let s=(await Promise.resolve().then(r.t.bind(r,57305,19))).default,c=new o.cs(t.getSignerOrProvider(),a,s,t.options,t.storage);await c.read("isApprovedForAll",[n,e])||(await c.read("getApproved",[i])).toLowerCase()===e.toLowerCase()||await c.sendTransaction("setApprovalForAll",[e,!0])}else if(p){let i=(await Promise.resolve().then(r.t.bind(r,59355,19))).default,s=new o.cs(t.getSignerOrProvider(),a,i,t.options,t.storage);await s.read("isApprovedForAll",[n,e])||await s.sendTransaction("setApprovalForAll",[e,!0])}else throw Error("Contract must implement ERC 1155 or ERC 721.")}function p(t){(0,n.A)(void 0!==t.assetContractAddress&&null!==t.assetContractAddress,"Asset contract address is required"),(0,n.A)(void 0!==t.buyoutPricePerToken&&null!==t.buyoutPricePerToken,"Buyout price is required"),(0,n.A)(void 0!==t.listingDurationInSeconds&&null!==t.listingDurationInSeconds,"Listing duration is required"),(0,n.A)(void 0!==t.startTimestamp&&null!==t.startTimestamp,"Start time is required"),(0,n.A)(void 0!==t.tokenId&&null!==t.tokenId,"Token ID is required"),(0,n.A)(void 0!==t.quantity&&null!==t.quantity,"Quantity is required"),"NewAuctionListing"===t.type&&(0,n.A)(void 0!==t.reservePricePerToken&&null!==t.reservePricePerToken,"Reserve price is required")}async function u(t,e,r){return{quantity:r.quantityDesired,pricePerToken:r.pricePerToken,currencyContractAddress:r.currency,buyerAddress:r.offeror,quantityDesired:r.quantityWanted,currencyValue:await (0,c.a)(t,r.currency,r.quantityWanted.mul(r.pricePerToken)),listingId:e}}function g(t,e,r){return r=i.gH.from(r),t=i.gH.from(t),e=i.gH.from(e),!t.eq(i.gH.from(0))&&e.sub(t).mul(o.dE).div(t).gte(r)}async function h(t,e,r){let a=[];for(;e-t>s.D;)a.push(r(t,t+s.D-1)),t+=s.D;return a.push(r(t,e-1)),await Promise.all(a)}},17152:(t,e,r)=>{r.d(e,{B:()=>c,C:()=>d,N:()=>l,a:()=>p,s:()=>u});var a=r(27454),i=r(14476),n=r(95848);let s=i.z.object({}).catchall(i.z.union([a.cx,i.z.unknown()])),o=i.z.union([i.z.array(i.z.array(s)).transform(t=>t.flat()),i.z.array(s),s]).optional().nullable(),c=i.z.object({name:i.z.union([i.z.string(),i.z.number()]).optional().nullable(),description:i.z.string().nullable().optional().nullable(),image:a.cy.nullable().optional(),animation_url:a.cy.optional().nullable()}),d=c.extend({external_url:a.cy.nullable().optional(),background_color:a.cz.optional().nullable(),properties:o,attributes:o}).catchall(i.z.union([a.cx,i.z.unknown()])),l=i.z.union([d,i.z.string()]),p=d.extend({id:i.z.string(),uri:i.z.string(),image:i.z.string().nullable().optional(),external_url:i.z.string().nullable().optional(),animation_url:i.z.string().nullable().optional()});async function u(t,e,i,s){if((0,n.i)(i))s.value=e;else{let n=(await Promise.resolve().then(r.t.bind(r,96337,19))).default,o=t.getSigner(),c=t.getProvider(),d=new a.cs(o||c,i,n,t.options,t.storage),l=await t.getSignerAddress(),p=t.address;return(await d.read("allowance",[l,p])).lt(e)&&await d.sendTransaction("approve",[p,e]),s}}}}]);