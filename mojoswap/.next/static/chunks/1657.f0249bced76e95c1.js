"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1657],{75739:(t,i,n)=>{n.d(i,{n:()=>s});function s(t){return"string"==typeof t?Number.parseInt(t,"0x"===t.trim().substring(0,2)?16:10):"bigint"==typeof t?Number(t):t}},1657:(t,i,n)=>{n.d(i,{SignerConnector:()=>o});var s=n(16454),e=n(75739),r=n(82495),h=n(27454);n(74486);class o extends r.C{constructor(t){super(),(0,s._)(this,"onChainChanged",t=>{let i=(0,e.n)(t),n=!this.options.chains.find(t=>t.chainId===i);this.emit("change",{chain:{id:i,unsupported:n}})}),this.options=t}async connect(t){t.chainId&&this.switchChain(t.chainId);let i=await this.getSigner();return await i.getAddress()}async disconnect(){this._provider=void 0,this._signer=void 0}async getAddress(){let t=await this.getSigner();if(!t)throw Error("No signer found");return await t.getAddress()}async isConnected(){try{return!!await this.getAddress()}catch{return!1}}async getProvider(){return this._provider||(this._provider=(0,h.a_)(this.options.chain,{clientId:this.options.clientId,secretKey:this.options.secretKey})),this._provider}async getSigner(){if(!this._signer){let t=await this.getProvider();this._signer=a(this.options.signer,t)}return this._signer}async switchChain(t){let i=this.options.chains.find(i=>i.chainId===t);if(!i)throw Error(`Chain not found for chainId ${t}, please add it to the chains property when creating this wallet`);this._provider=(0,h.a_)(i,{clientId:this.options.clientId,secretKey:this.options.secretKey}),this._signer=a(this.options.signer,this._provider),this.onChainChanged(t)}async setupListeners(){}updateChains(t){this.options.chains=t}}function a(t,i){return i?t.connect(i):t}}}]);