"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1071],{34803:(e,t,n)=>{n.d(t,{W:()=>r});var s=n(40257),i=n(74486);class r extends i.A{constructor(e){let{chains:t=s.k9b,options:n}=e;super(),this.chains=t,this.options=n}getBlockExplorerUrls(e){let t=e.explorers?.map(e=>e.url)??[];return t.length>0?t:void 0}isChainUnsupported(e){return!this.chains.some(t=>t.chainId===e)}updateChains(e){this.chains=e}}},92555:(e,t,n)=>{n.d(t,{A:()=>a,C:()=>o,R:()=>h,S:()=>d,U:()=>u,a:()=>c});var s=n(16454);class i extends Error{constructor(e,t){let{cause:n,code:s,data:i}=t;if(!Number.isInteger(s))throw Error('"code" must be an integer.');if(!e||"string"!=typeof e)throw Error('"message" must be a nonempty string.');super(`${e}. Cause: ${JSON.stringify(n)}`),this.cause=n,this.code=s,this.data=i}}class r extends i{constructor(e,t){let{cause:n,code:s,data:i}=t;if(!(Number.isInteger(s)&&s>=1e3&&s<=4999))throw Error('"code" must be an integer such that: 1000 <= code <= 4999');super(e,{cause:n,code:s,data:i})}}class a extends Error{constructor(){super(...arguments),(0,s._)(this,"name","AddChainError"),(0,s._)(this,"message","Error adding chain")}}class o extends Error{constructor(e){let{chainId:t,connectorId:n}=e;super(`Chain "${t}" not configured for connector "${n}".`),(0,s._)(this,"name","ChainNotConfigured")}}class c extends Error{constructor(){super(...arguments),(0,s._)(this,"name","ConnectorNotFoundError"),(0,s._)(this,"message","Connector not found")}}class h extends i{constructor(e){super("Resource unavailable",{cause:e,code:-32002}),(0,s._)(this,"name","ResourceUnavailable")}}class d extends r{constructor(e){super("Error switching chain",{cause:e,code:4902}),(0,s._)(this,"name","SwitchChainError")}}class u extends r{constructor(e){super("User rejected request",{cause:e,code:4001}),(0,s._)(this,"name","UserRejectedRequestError")}}},75739:(e,t,n)=>{n.d(t,{n:()=>s});function s(e){return"string"==typeof e?Number.parseInt(e,"0x"===e.trim().substring(0,2)?16:10):"bigint"==typeof e?Number(e):e}},1071:(e,t,n)=>{n.d(t,{CoinbaseWalletConnector:()=>l});var s=n(16454),i=n(34803),r=n(92555),a=n(8402),o=n(24824),c=n(8471),h=n(19337),d=n(17173),u=n(75739);n(74486);class l extends i.W{constructor(e){let{chains:t,options:n}=e;super({chains:t,options:{reloadOnDisconnect:!1,...n}}),(0,s._)(this,"id",h.w.coinbase),(0,s._)(this,"name","Coinbase Wallet"),(0,s._)(this,"ready",!0),(0,s._)(this,"onAccountsChanged",e=>{0===e.length?this.emit("disconnect"):this.emit("change",{account:a.getAddress(e[0])})}),(0,s._)(this,"onChainChanged",e=>{let t=(0,u.n)(e),n=this.isChainUnsupported(t);this.emit("change",{chain:{id:t,unsupported:n}})}),(0,s._)(this,"onDisconnect",()=>{this.emit("disconnect")})}async connect(){let{chainId:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let t=await this.getProvider();this.setupListeners(),this.emit("message",{type:"connecting"});let n=await t.enable(),s=a.getAddress(n[0]),i=await this.getChainId(),r=this.isChainUnsupported(i);if(e&&i!==e)try{i=(await this.switchChain(e)).chainId,r=this.isChainUnsupported(i)}catch(t){console.error(`Connected but failed to switch to desired chain ${e}`,t)}return{account:s,chain:{id:i,unsupported:r},provider:new o.j(t)}}catch(e){if(/(user closed modal|accounts received is empty)/i.test(e.message))throw new r.U(e);throw e}}async disconnect(){if(!this._provider)return;let e=await this.getProvider();e.removeListener("accountsChanged",this.onAccountsChanged),e.removeListener("chainChanged",this.onChainChanged),e.removeListener("disconnect",this.onDisconnect),e.disconnect(),e.close()}async getAccount(){let e=await this.getProvider(),t=await e.request({method:"eth_accounts"});if(0===t.length)throw Error("No accounts found");return a.getAddress(t[0])}async getChainId(){let e=await this.getProvider();return(0,u.n)(e.chainId)}async getProvider(){if(!this._provider){let e=(await Promise.all([n.e(7638),n.e(8613),n.e(9589),n.e(4573),n.e(9842)]).then(n.bind(n,24573))).default;"function"!=typeof e&&"function"==typeof e.default&&(e=e.default),this._client=new e(this.options);let t=this._client.walletExtension?.getChainId(),s=this.chains.find(e=>this.options.chainId?e.chainId===this.options.chainId:e.chainId===t)||this.chains[0],i=this.options.chainId||s?.chainId,r=this.options.jsonRpcUrl||s?.rpc[0];this._provider=this._client.makeWeb3Provider(r,i)}return this._provider}async getSigner(){let{chainId:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},[t,n]=await Promise.all([this.getProvider(),this.getAccount()]);return new o.j(t,e).getSigner(n)}async isAuthorized(){try{return!!await this.getAccount()}catch{return!1}}async switchChain(e){let t=await this.getProvider(),n=c.hexValue(e);try{return await t.request({method:"wallet_switchEthereumChain",params:[{chainId:n}]}),this.chains.find(t=>t.chainId===e)??{chainId:e,name:`Chain ${n}`,slug:`${n}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],testnet:!1,chain:"ethereum",shortName:"eth"}}catch(i){let s=this.chains.find(t=>t.chainId===e);if(!s)throw new r.C({chainId:e,connectorId:this.id});if(4902===i.code)try{return await t.request({method:"wallet_addEthereumChain",params:[{chainId:n,chainName:s.name,nativeCurrency:s.nativeCurrency,rpcUrls:(0,d.g)(s),blockExplorerUrls:this.getBlockExplorerUrls(s)}]}),s}catch(e){if(this._isUserRejectedRequestError(e))throw new r.U(e);throw new r.A}if(this._isUserRejectedRequestError(i))throw new r.U(i);throw new r.S(i)}}_isUserRejectedRequestError(e){return/(user rejected)/i.test(e.message)}async setupListeners(){let e=await this.getProvider();e.on("accountsChanged",this.onAccountsChanged),e.on("chainChanged",this.onChainChanged),e.on("disconnect",this.onDisconnect)}async getQrUrl(){if(await this.getProvider(),!this._client)throw Error("Coinbase Wallet SDK not initialized");return this._client.getQrUrl()}}}}]);