"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[631],{90078:(t,e,r)=>{r.d(e,{C:()=>i});var a=r(79195),n=r(27454);class i{featureName=n.d7.name;constructor(t){this.contractWrapper=t}async getRecipient(){return await this.contractWrapper.read("primarySaleRecipient",[])}setRecipient=(0,a.f)(async t=>a.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPrimarySaleRecipient",args:[t]}))}},80631:(t,e,r)=>{r.r(e),r.d(e,{SmartContract:()=>V});var a=r(21187),n=r(12204),i=r(27454),s=r(79195),o=r(37457),c=r(65579),p=r(8402),d=r(71414),m=r(8392),h=r(33020),g=r(11561),l=r(73207),u=r(14476),f=r(17190),A=r(70693);let W=function(t){return t[t.None=0]="None",t[t.AddAdmin=1]="AddAdmin",t[t.RemoveAdmin=2]="RemoveAdmin",t}({}),y={startDate:o.gH.from(0),expirationDate:o.gH.from(0),approvedCallTargets:[],nativeTokenLimitPerTransaction:"0"},w=u.z.object({startDate:a.S,expirationDate:a.E,nativeTokenLimitPerTransaction:i.cw.default(0),approvedCallTargets:u.z.union([u.z.array(i.b9),u.z.literal("*")])}),v=u.z.array(u.z.object({signer:i.b9,makeAdmin:u.z.boolean(),permissions:w})),T=[{name:"signer",type:"address"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}],P=[{name:"signer",type:"address"},{name:"isAdmin",type:"uint8"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}];class S{featureName=i.dm.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}hasDuplicateSigners(t){let e={};for(let r of t.map(t=>t.signer)){if(e[r])return!0;e[r]=!0}return!1}parseSignerPermissionsStruct(t){return{startDate:new Date(1e3*parseInt(t.startTimestamp.toString())),expirationDate:new Date(1e3*parseInt(t.endTimestamp.toString())),nativeTokenLimitPerTransaction:o.gH.from(t.nativeTokenLimitPerTransaction),approvedCallTargets:t.approvedTargets}}async sendSignerPermissionRequest(t,e,r){let{payload:a,signature:n}=await this.generatePayload(t,e,r);return s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"setPermissionsForSigner",args:[a,n]})}async generatePayload(t,e,r){let a={signer:t,isAdmin:r.valueOf(),approvedTargets:"*"===e.approvedCallTargets?[i.cu]:e.approvedCallTargets,nativeTokenLimitPerTransaction:c.parseEther(e.nativeTokenLimitPerTransaction),permissionStartTimestamp:e.startDate,permissionEndTimestamp:e.expirationDate,reqValidityStartTimestamp:0,reqValidityEndTimestamp:o.gH.from(Math.floor(new Date(Date.now()+31536e7).getTime()/1e3)),uid:(0,l.L)(void 0)},n=await this.contractWrapper.getChainID(),s=this.contractWrapper.getSigner();(0,g.A)(s,"No signer available");let p=await this.contractWrapper.signTypedData(s,{name:"Account",version:"1",chainId:n,verifyingContract:this.getAddress()},{SignerPermissionRequest:P},a);return{payload:a,signature:p}}async generateLegacyPayload(t,e){if("*"===e.approvedCallTargets)throw Error("Wildcard call targets are not supported on legacy account permissions contract, please deploy an updated contract factory.");let r={signer:t,approvedTargets:e.approvedCallTargets,nativeTokenLimitPerTransaction:c.parseEther(e.nativeTokenLimitPerTransaction),permissionStartTimestamp:e.startDate,permissionEndTimestamp:e.expirationDate,reqValidityStartTimestamp:0,reqValidityEndTimestamp:o.gH.from(Math.floor(new Date(Date.now()+31536e7).getTime()/1e3)),uid:(0,l.L)(void 0)},a=await this.contractWrapper.getChainID(),n=this.contractWrapper.getSigner();(0,g.A)(n,"No signer available");let i=await this.contractWrapper.signTypedData(n,{name:"Account",version:"1",chainId:a,verifyingContract:this.getAddress()},{SignerPermissionRequest:T},r);return{payload:r,signature:i}}async isAdmin(t){let e=await (0,i.aL)(t);return await this.contractWrapper.read("isAdmin",[e])}async isSigner(t){let e=await (0,i.aL)(t);return await this.contractWrapper.read("isActiveSigner",[e])}async getAllAdmins(){return await this.contractWrapper.read("getAllAdmins",[])}async getAllSigners(){let t=await this.contractWrapper.read("getAllActiveSigners",[]);return await Promise.all(t.map(async t=>({signer:t.signer,permissions:this.parseSignerPermissionsStruct(t)})))}async getAllAdminsAndSigners(){return[...(await this.getAllAdmins()).map(t=>({isAdmin:!0,signer:t,permissions:{startDate:new Date(0),expirationDate:new Date(0),nativeTokenLimitPerTransaction:o.gH.from(0),approvedCallTargets:[]}})),...await this.getAllSigners()]}grantAdminPermissions=(0,s.f)(async t=>{let e=await (0,i.aL)(t);return await this.sendSignerPermissionRequest(e,y,W.AddAdmin)});revokeAdminPermissions=(0,s.f)(async t=>{let e=await (0,i.aL)(t);return await this.sendSignerPermissionRequest(e,y,W.RemoveAdmin)});grantPermissions=(0,s.f)(async(t,e)=>{let r=await (0,i.aL)(t),a=await w.parseAsync(e);return await this.sendSignerPermissionRequest(r,a,W.None)});updatePermissions=(0,s.f)(async(t,e)=>{let r=await (0,i.aL)(t),a=await w.parseAsync(e);if(await this.isAdmin(r))throw Error("Signer is already an admin. Cannot update permissions of an existing admin.");if(!await this.isSigner(r))throw Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");return await this.sendSignerPermissionRequest(r,a,W.None)});revokeAccess=(0,s.f)(async t=>{let e=await (0,i.aL)(t);return await this.sendSignerPermissionRequest(e,{startDate:o.gH.from(0),expirationDate:o.gH.from(0),approvedCallTargets:[],nativeTokenLimitPerTransaction:"0"},W.None)});approveTargetForSigner=(0,s.f)(async(t,e)=>{let r=await (0,i.aL)(t),a=await (0,i.aL)(e);if(await this.isAdmin(r))throw Error("Signer is already an admin. Cannot approve targets for an admin.");if(!await this.isSigner(r))throw Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");let n=await this.contractWrapper.read("getPermissionsForSigner",[r]);if(n.approvedTargets.includes(e))throw Error("Target is already approved");let s=[...n.approvedTargets,a];return await this.sendSignerPermissionRequest(r,{startDate:o.gH.from(n.startTimestamp),expirationDate:o.gH.from(n.endTimestamp),approvedCallTargets:s,nativeTokenLimitPerTransaction:n.nativeTokenLimitPerTransaction.toString()},W.None)});disapproveTargetForSigner=(0,s.f)(async(t,e)=>{let r=await (0,i.aL)(t),a=await (0,i.aL)(e);if(await this.isAdmin(r))throw Error("Signer is already an admin. Cannot approve targets for an admin.");if(!await this.isSigner(r))throw Error("Signer does not already have permissions. You can grant permissions using `grantPermissions`.");let n=await this.contractWrapper.read("getPermissionsForSigner",[r]);if(!n.approvedTargets.includes(a))throw Error("Target is currently not approved");let s=n.approvedTargets.filter(t=>p.getAddress(t)!==p.getAddress(a));return await this.sendSignerPermissionRequest(r,{startDate:o.gH.from(n.startTimestamp),expirationDate:o.gH.from(n.endTimestamp),approvedCallTargets:s,nativeTokenLimitPerTransaction:n.nativeTokenLimitPerTransaction.toString()},W.None)});resetAllPermissions=(0,s.f)(async t=>{let e=await v.parseAsync(t);if(this.hasDuplicateSigners(e))throw Error("Duplicate signers found in input.");let r=[],a=[],n=[],i=await this.getAllAdmins(),o=e.filter(t=>t.makeAdmin).map(t=>t.signer);i.forEach(async t=>{if(!o.includes(t)){let e=(await this.sendSignerPermissionRequest(t,y,W.RemoveAdmin)).encode();r.push(e)}});let c=await this.getAllSigners(),p=e.filter(t=>!t.makeAdmin).map(t=>t.signer);for(let t of(await Promise.all(c.map(async t=>{if(!p.includes(t.signer)){let e=(await this.sendSignerPermissionRequest(t.signer,y,W.None)).encode();n.push(e)}})),e))if(t.makeAdmin)(await this.sendSignerPermissionRequest(t.signer,y,W.AddAdmin)).encode();else{let e=(await this.sendSignerPermissionRequest(t.signer,t.permissions,W.None)).encode();a.push(e)}let d=[];return r.forEach(t=>{d.push(t)}),n.forEach(t=>{d.push(t)}),a.forEach(t=>{d.push(t)}),s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"multicall",args:[d]})})}class x{featureName=i.dn.name;constructor(t){this.contractWrapper=t,this.accountPermissions=this.detectAccountPermissions()}detectAccountPermissions(){if((0,n.d)(this.contractWrapper,"AccountPermissions")||(0,n.d)(this.contractWrapper,"AccountPermissionsV1"))return new S(this.contractWrapper)}getAddress(){return this.contractWrapper.address}async isAdmin(t){return(0,a.a)(this.accountPermissions,i.dm).isAdmin(t)}async isSigner(t){return(0,a.a)(this.accountPermissions,i.dm).isSigner(t)}async getAllAdmins(){return(0,a.a)(this.accountPermissions,i.dm).getAllAdmins()}async getAllSigners(){return(0,a.a)(this.accountPermissions,i.dm).getAllSigners()}async getAllAdminsAndSigners(){return(0,a.a)(this.accountPermissions,i.dm).getAllAdminsAndSigners()}grantAdminPermissions=(0,s.f)(async t=>(0,a.a)(this.accountPermissions,i.dm).grantAdminPermissions.prepare(t));revokeAdminPermissions=(0,s.f)(async t=>(0,a.a)(this.accountPermissions,i.dm).revokeAdminPermissions.prepare(t));grantPermissions=(0,s.f)(async(t,e)=>(0,a.a)(this.accountPermissions,i.dm).grantPermissions.prepare(t,e));updatePermissions=(0,s.f)(async(t,e)=>(0,a.a)(this.accountPermissions,i.dm).updatePermissions.prepare(t,e));revokeAccess=(0,s.f)(async t=>(0,a.a)(this.accountPermissions,i.dm).revokeAccess.prepare(t));approveTargetForSigner=(0,s.f)(async(t,e)=>(0,a.a)(this.accountPermissions,i.dm).approveTargetForSigner.prepare(t,e));disapproveTargetForSigner=(0,s.f)(async(t,e)=>(0,a.a)(this.accountPermissions,i.dm).disapproveTargetForSigner.prepare(t,e));resetAllPermissions=(0,s.f)(async t=>(0,a.a)(this.accountPermissions,i.dm).resetAllPermissions.prepare(t))}class b{featureName=i.dp.name;constructor(t){this.contractWrapper=t,this.events=new n.a(this.contractWrapper)}getAddress(){return this.contractWrapper.address}async predictAccountAddress(t,e){let r=d.YW("");return e&&(r=e),this.contractWrapper.read("getAddress",[t,r])}async getAssociatedAccounts(t){return this.contractWrapper.read("getAccountsOfSigner",[t])}async getAllAccounts(){return await this.contractWrapper.read("getAllAccounts",[])}async isAccountDeployed(t,e){let r=await this.predictAccountAddress(t,e);return(0,i.au)(r,this.contractWrapper.getProvider())}createAccount=(0,s.f)(async(t,e)=>{if(await this.isAccountDeployed(t,e))throw Error(`Account already deployed for admin: ${t}`);let r=d.YW("");return e&&(r=e),s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createAccount",args:[t,r],parse:t=>({address:this.contractWrapper.parseLogs("AccountCreated",t?.logs)[0].args.account,receipt:t})})})}class E{constructor(t,e){this.contractWrapper=t,this.storage=e}async get(){return this._cachedMetadata||(this._cachedMetadata=await (0,i.K)(this.contractWrapper.address,this.contractWrapper.getProvider(),this.storage,this.contractWrapper.options)),this._cachedMetadata}async extractSources(){let t=await this.get();return(0,f.f)(t,this.storage)}async extractFunctions(){let t;try{t=await this.get()}catch(t){}return(0,i.a2)(i.bj.parse(this.contractWrapper.abi),t?.metadata)}async extractEvents(){let t;try{t=await this.get()}catch(t){}return function(t,e){let r=i.bj.parse(t||[]).filter(t=>"event"===t.type),a=[];for(let t of r){let r=(0,i.a0)(t.name,e,"events");a.push({inputs:t.inputs||[],outputs:t.outputs||[],name:t.name||"unknown",comment:r})}return a}(i.bj.parse(this.contractWrapper.abi),t?.metadata)}}class C{featureName=i.dq.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.readContract.address}async getAll(){return await this.contractWrapper.readContract.getAllExtensions()}async get(t){return await this.contractWrapper.readContract.getExtension(t)}async getExtensionAddress(t){return(await this.get(t)).metadata.implementation}async getAllFunctions(t){return(await this.get(t)).functions}async getExtensionForFunction(t){let e=t.functionSelector;return e||((0,g.A)(t.functionSignature,"Atleast one of function selector and signature must be provided"),e=m.id(t.functionSignature).substring(0,10)),await this.contractWrapper.readContract.getMetadataForFunction(e)}async getExtensionAddressForFunction(t){return(await this.getExtensionForFunction(t)).implementation}add=(0,s.f)(async t=>s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"addExtension",args:[t.extension],parse:async e=>{if(this.contractWrapper.parseLogs("ExtensionAdded",e.logs).length<1)throw Error("No ExtensionAdded event found");let r=t.extensionAbi?i.bj.parse(t.extensionAbi):(await (0,i.K)(t.extension.metadata.implementation,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,a=this.filterAbiForAdd(r,t.extension),n=(0,i.aj)([i.bj.parse(this.contractWrapper.abi),a]);return this.contractWrapper.updateAbi(n),e}}));addDeployed=(0,s.f)(async t=>{let e=t.extensionAbi;e||(e=(await (0,i.K)(t.extensionAddress,this.contractWrapper.getProvider(),this.contractWrapper.storage,this.contractWrapper.options)).abi),(0,g.A)(e,"Require extension ABI");let r="";if(t.extensionMetadata){if("string"==typeof t.extensionMetadata)r=t.extensionMetadata;else{let e=await i.bD.parseAsync(t.extensionMetadata);r=await this.contractWrapper.storage.upload(e)}}let a=(0,A.b)(i.bj.parse(e)),n={metadata:{name:t.extensionName,metadataURI:r,implementation:t.extensionAddress},functions:a};return this.add.prepare({extension:n,extensionAbi:e})});addPublished=(0,s.f)(async t=>{let e=t.version||"latest",{deployedExtensionAddress:r,extensionMetadata:a}=await this.deployExtension(t.extensionName,t.publisherAddress||i.aH,e);return this.addDeployed.prepare({extensionName:t.extensionName,extensionAddress:r,extensionMetadata:t.extensionMetadataOverride||a})});replace=(0,s.f)(async t=>s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"replaceExtension",args:[t.extension],parse:async e=>{if(this.contractWrapper.parseLogs("ExtensionReplaced",e.logs).length<1)throw Error("No ExtensionReplaced event found");let r=t.extensionAbi?i.bj.parse(t.extensionAbi):(await (0,i.K)(t.extension.metadata.implementation,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,a=this.filterAbiForRemove(i.bj.parse(this.contractWrapper.abi),r),n=this.filterAbiForAdd(r,t.extension),s=(0,i.aj)([a,n]);return this.contractWrapper.updateAbi(s),e}}));replaceDeployed=(0,s.f)(async t=>{let e=t.extensionAbi;e||(e=(await (0,i.K)(t.extensionAddress,this.contractWrapper.getProvider(),this.contractWrapper.storage,this.contractWrapper.options)).abi),(0,g.A)(e,"Require extension ABI");let r="";if(t.extensionMetadata){if("string"==typeof t.extensionMetadata)r=t.extensionMetadata;else{let e=await i.bD.parseAsync(t.extensionMetadata);r=await this.contractWrapper.storage.upload(e)}}let a=(0,A.b)(i.bj.parse(e)),n={metadata:{name:t.extensionName,metadataURI:r,implementation:t.extensionAddress},functions:a};return this.replace.prepare({extension:n,extensionAbi:e})});replacePublished=(0,s.f)(async t=>{let e=t.version||"latest",{deployedExtensionAddress:r,extensionMetadata:a}=await this.deployExtension(t.extensionName,t.publisherAddress||i.aH,e);return this.replaceDeployed.prepare({extensionName:t.extensionName,extensionAddress:r,extensionMetadata:t.extensionMetadataOverride||a})});remove=(0,s.f)(async t=>{let e=await this.getExtensionAddress(t.extensionName);return s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"removeExtension",args:[t.extensionName],parse:async t=>{if(this.contractWrapper.parseLogs("ExtensionRemoved",t.logs).length<1)throw Error("No ExtensionRemoved event found");let r=(await (0,i.K)(e,this.contractWrapper.getProvider(),this.contractWrapper.storage)).abi,a=this.filterAbiForRemove(i.bj.parse(this.contractWrapper.abi),r);return this.contractWrapper.updateAbi(a),t}})});filterAbiForAdd(t,e){let r=new h.KA(t),a=e.functions.map(t=>t.functionSelector);return t.filter(t=>{let e=Object.values(new h.KA([t]).functions);if(0===e.length)return!1;let n=r.getSighash(e[0]);return a.includes(n)})}filterAbiForRemove(t,e){let r=new h.KA(t),a=new h.KA(e),n=Object.values(a.functions).map(t=>a.getSighash(t));return t.filter(t=>{let e=Object.values(new h.KA([t]).functions);if(0===e.length)return!1;let a=r.getSighash(e[0]);return!n.includes(a)})}async deployExtension(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"latest",a=await (0,i.aI)(e,t,r,this.contractWrapper.storage,this.contractWrapper.options.clientId,this.contractWrapper.options.secretKey),n=await (0,A.g)(a.metadataUri,this.contractWrapper.storage,this.contractWrapper.getProvider(),"",this.contractWrapper.options.clientId,this.contractWrapper.options.secretKey),s=n.find(t=>"implementation"===t.type)?.transaction.predictedAddress,o=n.filter(t=>t.transaction.data&&t.transaction.data.length>0),c=o.filter(t=>"infra"!==t.type).map(t=>t.transaction),p=o.filter(t=>"infra"===t.type).map(t=>t.transaction),d=this.contractWrapper.getSigner();for(let t of((0,g.A)(d,"Signer is required"),await (0,A.a)(d,p,{}),c))try{await (0,A.d)(d,t)}catch(e){console.debug(`Error deploying contract at ${t.predictedAddress}`,e?.message)}return{deployedExtensionAddress:s,extensionMetadata:a.metadataUri}}}class D{featureName=i.dr.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=(0,s.f)(async(t,e,r)=>s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC20",args:[t,e,r],parse:t=>{let e=this.contractWrapper.parseLogs("AirdropFailed",t.logs).map(t=>({recipient:t.args.recipient,amount:t.args.amount.toString()}));return{successfulDropCount:r.length-e.length,failedDropCount:e.length,failedDrops:e}}}))}class R{featureName=i.ds.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=(0,s.f)(async(t,e,r)=>s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC721",args:[t,e,r],parse:t=>{let e=this.contractWrapper.parseLogs("AirdropFailed",t.logs).map(t=>({recipient:t.args.recipient,tokenId:t.args.tokenId.toNumber()}));return{successfulDropCount:r.length-e.length,failedDropCount:e.length,failedDrops:e}}}))}class L{featureName=i.dt.name;constructor(t){this.contractWrapper=t}getAddress(){return this.contractWrapper.address}drop=(0,s.f)(async(t,e,r)=>s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"airdropERC1155",args:[t,e,r],parse:t=>{let e=this.contractWrapper.parseLogs("AirdropFailed",t.logs).map(t=>({recipient:t.args.recipient,tokenId:t.args.tokenId.toNumber(),amount:t.args.amount.toString()}));return{successfulDropCount:r.length-e.length,failedDropCount:e.length,failedDrops:e}}}))}var N=r(95848),k=r(34590),F=r(66048),q=r(97205),I=r(20522),M=r(90078),j=r(21518),H=r(55814),K=r(10805),O=r(35948);r(3802),r(16763),r(74486),r(32017);class V{get abi(){return i.bj.parse(this.contractWrapper.abi||[])}get royalties(){return(0,a.a)(this.detectRoyalties(),i.d5)}get roles(){return(0,a.a)(this.detectRoles(),i.d4)}get sales(){return(0,a.a)(this.detectPrimarySales(),i.d7)}get platformFees(){return(0,a.a)(this.detectPlatformFees(),i.du)}get owner(){return(0,a.a)(this.detectOwnable(),i.d6)}get erc20(){return(0,a.a)(this.detectErc20(),i.cI)}get erc721(){return(0,a.a)(this.detectErc721(),i.c$)}get erc1155(){return(0,a.a)(this.detectErc1155(),i.dj)}get app(){return(0,a.a)(this.detectApp(),i.cK)}get directListings(){return(0,a.a)(this.detectDirectListings(),i.dA)}get englishAuctions(){return(0,a.a)(this.detectEnglishAuctions(),i.dB)}get offers(){return(0,a.a)(this.detectOffers(),i.dC)}get airdrop20(){return(0,a.a)(this.detectAirdrop20(),i.dr)}get airdrop721(){return(0,a.a)(this.detectAirdrop721(),i.ds)}get airdrop1155(){return(0,a.a)(this.detectAirdrop1155(),i.dt)}get accountFactory(){return(0,a.a)(this.detectAccountFactory(),i.dp)}get account(){return(0,a.a)(this.detectAccount(),i.dn)}get extensions(){return(0,a.a)(this.detectBaseRouter(),i.dq)}get chainId(){return this._chainId}constructor(t,e,r,a){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},o=arguments.length>5?arguments[5]:void 0,c=arguments.length>6&&void 0!==arguments[6]?arguments[6]:new i.cs(t,e,r,s,a);this._chainId=o,this.storage=a,this.contractWrapper=c,this.events=new n.a(this.contractWrapper),this.encoder=new N.C(this.contractWrapper),this.interceptor=new k.C(this.contractWrapper),this.estimator=new n.G(this.contractWrapper),this.publishedMetadata=new E(this.contractWrapper,this.storage),this.metadata=new n.C(this.contractWrapper,i.bg,this.storage)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}prepare(t,e,r){return s.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:e,overrides:r})}async call(t,e,r){return this.contractWrapper.call(t,e,r)}detectRoyalties(){if((0,n.d)(this.contractWrapper,"Royalty")){let t=new n.C(this.contractWrapper,i.bg,this.storage);return new F.C(this.contractWrapper,t)}}detectRoles(){if((0,n.d)(this.contractWrapper,"Permissions"))return new I.C(this.contractWrapper,i.G)}detectPrimarySales(){if((0,n.d)(this.contractWrapper,"PrimarySale"))return new M.C(this.contractWrapper)}detectPlatformFees(){if((0,n.d)(this.contractWrapper,"PlatformFee"))return new q.C(this.contractWrapper)}detectErc20(){if((0,n.d)(this.contractWrapper,"ERC20"))return new H.E(this.contractWrapper,this.storage,this.chainId)}detectErc721(){if((0,n.d)(this.contractWrapper,"ERC721"))return new K.E(this.contractWrapper,this.storage,this.chainId)}detectErc1155(){if((0,n.d)(this.contractWrapper,"ERC1155"))return new j.E(this.contractWrapper,this.storage,this.chainId)}detectOwnable(){if((0,n.d)(this.contractWrapper,"Ownable"))return new F.a(this.contractWrapper)}detectApp(){let t=new n.C(this.contractWrapper,i.bg,this.storage);return(0,n.d)(this.contractWrapper,"AppURI")?new n.b(this.contractWrapper,t,this.storage):(0,n.d)(this.contractWrapper,"ContractMetadata")?new n.b(this.contractWrapper,t,this.storage):void 0}detectDirectListings(){if((0,n.d)(this.contractWrapper,"DirectListings"))return new O.M(this.contractWrapper,this.storage)}detectEnglishAuctions(){if((0,n.d)(this.contractWrapper,"EnglishAuctions"))return new O.a(this.contractWrapper,this.storage)}detectOffers(){if((0,n.d)(this.contractWrapper,"Offers"))return new O.b(this.contractWrapper,this.storage)}detectBaseRouter(){if((0,n.d)(this.contractWrapper,i.dq.name))return new C(this.contractWrapper)}detectAirdrop20(){if((0,n.d)(this.contractWrapper,"AirdropERC20"))return new D(this.contractWrapper)}detectAirdrop721(){if((0,n.d)(this.contractWrapper,"AirdropERC721"))return new R(this.contractWrapper)}detectAirdrop1155(){if((0,n.d)(this.contractWrapper,"AirdropERC1155"))return new L(this.contractWrapper)}detectAccountFactory(){if((0,n.d)(this.contractWrapper,i.dp.name))return new b(this.contractWrapper)}detectAccount(){if((0,n.d)(this.contractWrapper,i.dn.name))return new x(this.contractWrapper)}}}}]);